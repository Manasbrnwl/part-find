generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String        @id @default(uuid())
  email         String        @unique
  name          String?
  date_of_birth DateTime?
  phone_number  String?       @unique
  role          Role?         @default(USER)
  fcm_token     String?
  jwt_token     String?
  otp           String?
  otp_exp       DateTime?
  weight        Float?
  gender        String?
  address       String?
  state         String?
  country       String?
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  height        Float?
  is_active     Boolean       @default(true)
  english_level String?
  posts         Post[]
  userImages    images[]
  comments      postApplied[]
}

model images {
  id        String   @id @default(uuid())
  userId    String
  image     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
}

model Post {
  id             String        @id @default(uuid())
  userId         String
  title          String        @db.VarChar(255)
  content        String?
  requirement    String?
  total          Int           @default(1)
  endDate        DateTime
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  location       String?
  payment        Float?
  paymentDate    DateTime?
  responsibility String?
  role           String?
  startDate      DateTime      @default(now())
  is_active      Boolean       @default(true)
  company_name   String?
  user           User          @relation(fields: [userId], references: [id])
  comments       postApplied[]

  @@unique([userId, title, startDate], map: "post_unique")
}

model postApplied {
  id        String   @id @default(uuid())
  userId    String
  postId    String
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  status    Status?  @default(PENDING)
  post      Post     @relation(fields: [postId], references: [id])
  user      User     @relation(fields: [userId], references: [id])

  @@unique([userId, postId], map: "user_post_unique")
}

enum Role {
  USER
  ADMIN
  RECRUITER
}

enum Status {
  PENDING
  APPROVED
  REJECTED
}
